{"version":3,"sources":["components/Schedular.js","index.js"],"names":["Wrapper","styled","div","ScheduleWrapper","H1","h1","Schedular","pull_id","user_id","header","subHeader","startYear","startMonth","startDate","num_days","min_time","max_time","passScheduleOut","lastSelect","useState","schedule","setSchedule","selection","Date","numDays","minTime","maxTime","hourlyChunks","onChange","newSchedule","timeFormat","postSchedule","document","querySelector","classList","contains","sendData","dates","$","ajax","url","contentType","method","dataType","data","JSON","stringify","success","status","console","log","Swal","fire","type","title","text","result","confirmButtonText","error","init","ready","query_url","window","location","href","URL","searchParams","get","fetchedData","last_select","i","length","vote_name","vote_end","dateString","start_date","split","ReactDOM","render","StrictMode","getElementById","icon","error_message"],"mappings":"gMAIMA,EAAUC,UAAOC,IAAV,kFAKPC,EAAkBF,UAAOC,IAAV,iJAMfE,EAAKH,UAAOI,GAAV,6CAkCOC,IC7CXC,EAASC,ED6CEF,EA9Bf,YAAwI,IAAnHG,EAAkH,EAAlHA,OAAQC,EAA0G,EAA1GA,UAAWC,EAA+F,EAA/FA,UAAWC,EAAoF,EAApFA,WAAYC,EAAwE,EAAxEA,UAAWC,EAA6D,EAA7DA,SAAUC,EAAmD,EAAnDA,SAAUC,EAAyC,EAAzCA,SAAUC,EAA+B,EAA/BA,gBAAiBC,EAAc,EAAdA,WAAc,EACrGC,mBAASD,GAD4F,mBAC9HE,EAD8H,KACpHC,EADoH,KAOrI,OACE,kBAACrB,EAAD,KACE,gCACE,kBAACI,EAAD,KAAKK,GACL,2BAAIC,IAEN,6BACA,kBAACP,EAAD,KACE,kBAAC,IAAD,CACEmB,UAAWF,EACXP,UAAW,IAAIU,KAAKZ,EAAWC,EAAa,EAAGC,GAC/CW,QAASV,EACTW,QAASV,EACTW,QAASV,EACTW,aAAc,EACdC,SAnBR,SAAsBC,GACpBR,EAAYQ,GACZZ,EAAgBY,IAkBVC,WAAY,cCrClBZ,EAAa,GACbT,EAAS,0BACTC,EAAY,mEACXC,EAAmE,KAAxDC,EAA8D,EAAlDC,EAAqD,EAA1CC,EAA6C,EAAnCC,EAAsC,EAA5BC,EAA+B,GA8E1F,SAASe,EAAaX,GAEpB,IAD2BY,SAASC,cAAc,cAAcC,UAAUC,SAAS,UAC1D,CACvB,IAAIC,EAAW,CACb7B,UACAC,UACA6B,MAAOjB,GAETkB,EAAEC,KAAK,CACLC,IAAK,sBACLC,YAAa,mBACbC,OAAQ,OACRC,SAAU,OACVC,KAAMC,KAAKC,UAAUV,GACrBW,QAAS,SAAUH,GACE,WAAfA,EAAKI,OACPC,QAAQC,IAAI,kBAAmBd,GAE/Be,KAAKC,KAAK,CACRC,KAAM,QACNC,MAAO,2BACPC,KAAMX,EAAKY,OACXC,kBAAmB,kBAIzBC,MAAO,WACLC,WAvGRrB,EAAEN,UAAU4B,OAAM,WAChB,IAAIC,EAAYC,OAAOC,SAASC,KAC5BxB,EAAM,IAAIyB,IAAIJ,GAElBtD,EAAUiC,EAAI0B,aAAaC,IAAI,MAC/B3D,EAAUgC,EAAI0B,aAAaC,IAAI,QAM/B7B,EAAEC,KAAK,CACLC,IAAK,qBACLC,YAAa,mBACbC,OAAQ,MACRE,KAAM,CACJrC,QAASA,EACTC,QAASA,GAEXmC,SAAU,OACVI,QAAS,SAAUH,GACjB,GAAmB,WAAfA,EAAKI,OAAqB,CAC5B,IAAIoB,EAAcxB,EAAKA,KACvB1B,EAAakD,EAAYC,YAEzB,IAAK,IAAIC,EAAI,EAAGA,EAAIpD,EAAWqD,OAAQD,IACrCpD,EAAWoD,GAAK,IAAI/C,KAAKL,EAAWoD,IAGtCrB,QAAQC,IAAI,eAAgBhC,GAE5BT,EAAS2D,EAAYI,UACrB9D,EAAS,oDAAa0D,EAAYK,UAElC,IAAIC,EAAaN,EAAYO,WAAWC,MAAM,KAC9CjE,EAAY+D,EAAW,GACvB9D,EAAa8D,EAAW,GACxB7D,EAAY6D,EAAW,GAEvB5D,EAAWsD,EAAYtD,SACvBC,EAAWqD,EAAYrD,SACvBC,EAAWoD,EAAYpD,SAEvB6D,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,CACEtE,OAAQA,EACRC,UAAWA,EACXC,UAAWA,EACXC,WAAYA,EACZC,UAAWA,EACXC,SAAUA,EACVC,SAAUA,EACVC,SAAUA,EACVC,gBAAiBc,EACjBb,WAAYA,KAGhBc,SAASgD,eAAe,mBAI1B7B,KAAKC,KAAK,CACR6B,KAAM,QACN3B,MAAO,2BACPC,KAAMX,EAAKsC,cACXzB,kBAAmB,kBAIzBC,MAAO,WACLT,QAAQC,IAAI,iB","file":"static/js/main.a45c7abe.chunk.js","sourcesContent":["import ScheduleSelector from 'react-schedule-selector';\nimport styled from 'styled-components';\nimport React, { useState } from 'react';\n\nconst Wrapper = styled.div`\n  text-align: center;\n  margin: 0 auto;\n  width: 80%`;\n\nconst ScheduleWrapper = styled.div`\n  padding: 20px;\n  border-radius: 20px;\n  background: white;\n  box-shadow: 3px 5px 18px 0px rgba(191,191,191,0.76)`;\n\nconst H1 = styled.h1`\n  font-size: 32pt`;\n\n\nfunction Schedular({ header, subHeader, startYear, startMonth, startDate, num_days, min_time, max_time, passScheduleOut, lastSelect }) {\n  const [schedule, setSchedule] = useState(lastSelect);\n\n  function handleChange(newSchedule) {\n    setSchedule(newSchedule);\n    passScheduleOut(newSchedule);\n  }\n  return (\n    <Wrapper>\n      <header>\n        <H1>{header}</H1>\n        <p>{subHeader}</p>\n      </header>\n      <br />\n      <ScheduleWrapper>\n        <ScheduleSelector\n          selection={schedule}\n          startDate={new Date(startYear, startMonth - 1, startDate)}\n          numDays={num_days}\n          minTime={min_time}\n          maxTime={max_time}\n          hourlyChunks={1}\n          onChange={handleChange}\n          timeFormat={\"hh:mma\"}\n        />\n      </ScheduleWrapper>\n    </Wrapper>\n  )\n}\n\nexport default Schedular;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Schedular from './components/Schedular'\n\nlet pull_id, user_id;\nlet lastSelect = [];\nlet header = \"React Schedule Selector\";\nlet subHeader = \"Tap to select one time or drag to select multiple times at once.\";\nlet [startYear, startMonth, startDate, num_days, min_time, max_time] = [2021, 3, 8, 4, 4, 14];\n\n$(document).ready(function () {\n  var query_url = window.location.href\n  var url = new URL(query_url);\n\n  pull_id = url.searchParams.get(\"id\")\n  user_id = url.searchParams.get(\"name\")\n\n  fetchScheduleParams();\n})\n\nfunction fetchScheduleParams() {\n  $.ajax({\n    url: \"/api/vote/get/date\",\n    contentType: \"application/json\",\n    method: \"GET\",\n    data: {\n      pull_id: pull_id,\n      user_id: user_id\n    },\n    dataType: \"json\",\n    success: function (data) {\n      if (data.status == \"success\") {\n        let fetchedData = data.data;\n        lastSelect = fetchedData.last_select;\n\n        for (let i = 0; i < lastSelect.length; i++) {\n          lastSelect[i] = new Date(lastSelect[i])\n        }\n\n        console.log(\"lastSelect: \", lastSelect)\n\n        header = fetchedData.vote_name;\n        subHeader = `投票截止日期：${fetchedData.vote_end}`;\n\n        let dateString = fetchedData.start_date.split('/');\n        startYear = dateString[0];\n        startMonth = dateString[1];\n        startDate = dateString[2];\n\n        num_days = fetchedData.num_days;\n        min_time = fetchedData.min_time;\n        max_time = fetchedData.max_time;\n\n        ReactDOM.render(\n          <React.StrictMode>\n            <Schedular\n              header={header}\n              subHeader={subHeader}\n              startYear={startYear}\n              startMonth={startMonth}\n              startDate={startDate}\n              num_days={num_days}\n              min_time={min_time}\n              max_time={max_time}\n              passScheduleOut={postSchedule}\n              lastSelect={lastSelect}\n            />\n          </React.StrictMode>,\n          document.getElementById('schedular')\n        )\n\n      } else {\n        Swal.fire({\n          icon: \"error\",\n          title: \"很抱歉！\",\n          text: data.error_message,\n          confirmButtonText: \"確認\",\n        })\n      }\n    },\n    error: function () {\n      console.log(\"error\")\n    },\n  })\n}\n\nfunction postSchedule(schedule) {\n  let isSelectingSchedule = !document.querySelector(\"#schedular\").classList.contains('hidden');\n  if (isSelectingSchedule) {\n    let sendData = {\n      pull_id,\n      user_id,\n      dates: schedule\n    }\n    $.ajax({\n      url: \"/api/vote/save/date\",\n      contentType: \"application/json\",\n      method: \"POST\",\n      dataType: \"json\",\n      data: JSON.stringify(sendData),\n      success: function (data) {\n        if (data.status == \"success\") {\n          console.log('uploaded data: ', sendData)\n        } else {\n          Swal.fire({\n            type: \"error\",\n            title: \"很抱歉！\",\n            text: data.result,\n            confirmButtonText: \"確認\",\n          })\n        }\n      },\n      error: function () {\n        init()\n      },\n    })\n  }\n}\n\n"],"sourceRoot":""}