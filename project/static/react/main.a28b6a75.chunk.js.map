{"version":3,"sources":["components/Schedular.js","index.js"],"names":["pull_id","Wrapper","styled","div","ScheduleWrapper","H1","h1","header","subHeader","startYear","startMonth","startDate","num_days","min_time","max_time","window","onload","query_url","location","href","url","URL","searchParams","get","$","ajax","contentType","method","dataType","success","data","status","console","log","fetchedData","dateString","start_date","split","vote_name","vote_end","Swal","fire","type","title","text","error_message","confirmButtonText","error","Schedular","user_id","passScheduleOut","useState","schedule","setSchedule","selection","Date","numDays","minTime","maxTime","hourlyChunks","onChange","newSchedule","timeFormat","convertToFormat","format","dateArray","map","date","getFullYear","getMonth","getDate","getHours","toString","padStart","getMinutes","document","ready","ReactDOM","render","StrictMode","length","sendData","dates","JSON","stringify","result","init","getElementById"],"mappings":"uHAkCIA,E,yEAdEC,EAAUC,UAAOC,IAAV,kFAKPC,EAAkBF,UAAOC,IAAV,iJAMfE,EAAKH,UAAOI,GAAV,6CAIJC,EAAS,0BACTC,EAAY,mEACXC,EAAmE,KAAxDC,EAA8D,EAAlDC,EAAqD,EAA1CC,EAA6C,EAAnCC,EAAsC,EAA5BC,EAA+B,GAE1FC,OAAOC,OAAS,WACd,IAAIC,EAAYF,OAAOG,SAASC,KAC5BC,EAAM,IAAIC,IAAIJ,GAClBjB,EAAUoB,EAAIE,aAAaC,IAAI,MAK/BC,EAAEC,KAAK,CACLL,IAAI,iDAAD,OAAmDpB,GACtD0B,YAAa,mBACbC,OAAQ,MACRC,SAAU,OACVC,QAAS,SAAUC,GACjB,GAAmB,WAAfA,EAAKC,OAAqB,CAE5BC,QAAQC,IAAI,2BACZ,IAAIC,EAAcJ,EAAKA,KACnBK,EAAaD,EAAYE,WAAWC,MAAM,KAE9C9B,EAAS2B,EAAYI,UACrB9B,EAAS,oDAAa0B,EAAYK,UAClC9B,EAAY0B,EAAW,GACvBzB,EAAayB,EAAW,GACxBxB,EAAYwB,EAAW,GACvBvB,EAAWsB,EAAYtB,SACvBC,EAAWqB,EAAYrB,SACvBC,EAAWoB,EAAYpB,cAGvB0B,KAAKC,KAAK,CACRC,KAAM,QACNC,MAAO,2BACPC,KAAMd,EAAKe,cACXC,kBAAmB,kBAIzBC,MAAO,WACLf,QAAQC,IAAI,gBAmCHe,IC7GXhD,EAASiD,ED6GED,EA9Bf,YAAyC,IAApBE,EAAmB,EAAnBA,gBAAmB,EACNC,mBAAS,IADH,mBAC/BC,EAD+B,KACrBC,EADqB,KAOtC,OACE,kBAACpD,EAAD,KACE,gCACE,kBAACI,EAAD,KAAKE,GACL,2BAAIC,IAEN,6BACA,kBAACJ,EAAD,KACE,kBAAC,IAAD,CACEkD,UAAWF,EACXzC,UAAW,IAAI4C,KAAK9C,EAAWC,EAAa,EAAGC,GAC/C6C,QAAS5C,EACT6C,QAAS5C,EACT6C,QAAS5C,EACT6C,aAAc,EACdC,SAnBR,SAAsBC,GACpBR,EAAYQ,GACZX,EAAgBW,IAkBVC,WAAY,cC3FtB,SAASC,EAAgBC,EAAQC,GAC/B,GAAc,oBAAVD,EACF,OAAOC,EAAUC,KAAI,SAACC,GACpB,MAAM,GAAN,OAAUA,EAAKC,cAAf,YAAgCD,EAAKE,WAAa,EAAlD,YAAuDF,EAAKG,UAA5D,YAAyEH,EAAKI,WAAWC,WAAWC,SAAS,EAAG,KAAhH,YAAwHN,EAAKO,aAAaF,WAAWC,SAAS,EAAG,SAZvKjD,EAAEmD,UAAUC,OAAM,WAChB,IAAI3D,EAAYF,OAAOG,SAASC,KAC5BC,EAAM,IAAIC,IAAIJ,GAElBjB,EAAUoB,EAAIE,aAAaC,IAAI,MAC/B0B,EAAU7B,EAAIE,aAAaC,IAAI,WA2CjCsD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,CACE7B,gBAnCN,SAAsBE,GACpB,GAAuB,GAAnBA,EAAS4B,OAAa,CACxB,IAAIC,EAAW,CACbjF,UACAiD,UACAiC,MAAOnB,EAAgB,mBAAoBX,IAE7C5B,EAAEC,KAAK,CACLL,IAAI,yCACJM,YAAa,mBACbC,OAAQ,OACRC,SAAU,OACVE,KAAMqD,KAAKC,UAAUH,GACrBpD,QAAS,SAAUC,GACE,WAAfA,EAAKC,OACPC,QAAQC,IAAI,kBAAmBgD,GAE/BzC,KAAKC,KAAK,CACRC,KAAM,QACNC,MAAO,2BACPC,KAAMd,EAAKuD,OACXvC,kBAAmB,kBAIzBC,MAAO,WACLuC,eAYNX,SAASY,eAAe,gB","file":"static/js/main.a28b6a75.chunk.js","sourcesContent":["import ScheduleSelector from 'react-schedule-selector';\nimport styled from 'styled-components';\nimport React, { useState } from 'react';\n\n\n// 在要使用 schedular 的 js 檔中直接插入元件，並加入一個取得 schedule 的 callback。舉例如下： \n// \n//  <Schedular\n//    passScheduleOut = {getSchedule}\n//  ></Schedular>\n// \n// passScheduleOut 會在使用者每次更改選擇時間後呼叫。\n// 其需要在使用到 Schedular 的 js 檔中自行定義。\n//\n// 簡單的 passScheduleOut 範例：\n// \n//  function passScheduleOut(schedule){ \n//    console.log(schedule); \n//  }\n//\nconst Wrapper = styled.div`\n  text-align: center;\n  margin: 0 auto;\n  width: 80%`;\n\nconst ScheduleWrapper = styled.div`\n  padding: 20px;\n  border-radius: 20px;\n  background: white;\n  box-shadow: 3px 5px 18px 0px rgba(191,191,191,0.76)`;\n\nconst H1 = styled.h1`\n  font-size: 32pt`;\n\nlet pull_id;\nlet header = \"React Schedule Selector\";\nlet subHeader = \"Tap to select one time or drag to select multiple times at once.\";\nlet [startYear, startMonth, startDate, num_days, min_time, max_time] = [2021, 3, 8, 4, 4, 14];\n\nwindow.onload = () => {\n  let query_url = window.location.href\n  let url = new URL(query_url);\n  pull_id = url.searchParams.get(\"id\");\n  fetchScheduleParams();\n}\n\nfunction fetchScheduleParams() {\n  $.ajax({\n    url: `http://0.0.0.0:8001/api/vote/get/date?pull_id=${pull_id}`,\n    contentType: \"application/json\",\n    method: \"GET\",\n    dataType: \"json\",\n    success: function (data) {\n      if (data.status == \"success\") {\n        // RETURN\n        console.log(\"RETURN SCHEDULAR PARAMS\")\n        let fetchedData = data.data;\n        let dateString = fetchedData.start_date.split('/');\n\n        header = fetchedData.vote_name;\n        subHeader = `投票截止日期：${fetchedData.vote_end}`;\n        startYear = dateString[0];\n        startMonth = dateString[1];\n        startDate = dateString[2];\n        num_days = fetchedData.num_days;\n        min_time = fetchedData.min_time;\n        max_time = fetchedData.max_time;\n\n      } else {\n        Swal.fire({\n          type: \"error\",\n          title: \"很抱歉！\",\n          text: data.error_message,\n          confirmButtonText: \"確認\",\n        })\n      }\n    },\n    error: function () {\n      console.log(\"error dd\")\n    },\n  })\n}\n\nfunction Schedular({ passScheduleOut }) {\n  const [schedule, setSchedule] = useState([]);\n\n  function handleChange(newSchedule) {\n    setSchedule(newSchedule);\n    passScheduleOut(newSchedule);\n  }\n  return (\n    <Wrapper>\n      <header>\n        <H1>{header}</H1>\n        <p>{subHeader}</p>\n      </header>\n      <br />\n      <ScheduleWrapper>\n        <ScheduleSelector\n          selection={schedule}\n          startDate={new Date(startYear, startMonth - 1, startDate)}\n          numDays={num_days}\n          minTime={min_time}\n          maxTime={max_time}\n          hourlyChunks={1}\n          onChange={handleChange}\n          timeFormat={\"hh:mma\"}\n        />\n      </ScheduleWrapper>\n    </Wrapper>\n  )\n}\n\nexport default Schedular;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Schedular from './components/Schedular'\n\nlet pull_id, user_id;\n\n$(document).ready(function () {\n  var query_url = window.location.href\n  var url = new URL(query_url);\n\n  pull_id = url.searchParams.get(\"id\")\n  user_id = url.searchParams.get(\"name\")\n})\n\n\nfunction convertToFormat(format, dateArray) {\n  if (format == \"YYYY/MM/DD hh:mm\") {\n    return dateArray.map((date) => {\n      return `${date.getFullYear()}/${date.getMonth() + 1}/${date.getDate()} ${date.getHours().toString().padStart(2, \"0\")}:${date.getMinutes().toString().padStart(2, \"0\")}`\n    })\n  }\n}\nfunction postSchedule(schedule) {\n  if (schedule.length != 0) {\n    let sendData = {\n      pull_id,\n      user_id,\n      dates: convertToFormat('YYYY/MM/DD hh:mm', schedule)\n    }\n    $.ajax({\n      url: `http://0.0.0.0:8001/api/vote/save/date`,\n      contentType: \"application/json\",\n      method: \"POST\",\n      dataType: \"json\",\n      data: JSON.stringify(sendData),\n      success: function (data) {\n        if (data.status == \"success\") {\n          console.log('uploaded data: ', sendData)\n        } else {\n          Swal.fire({\n            type: \"error\",\n            title: \"很抱歉！\",\n            text: data.result,\n            confirmButtonText: \"確認\",\n          })\n        }\n      },\n      error: function () {\n        init()\n      },\n    })\n  }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Schedular\n      passScheduleOut={postSchedule}\n    />\n  </React.StrictMode>,\n  document.getElementById('schedular')\n)\n"],"sourceRoot":""}